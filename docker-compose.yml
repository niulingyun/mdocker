version: "3"

services:

  nginx:
    image: nginx:alpine
    container_name: mdocker-nginx
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # app
      - ./www:/usr/share/nginx/html
      # config
      - ./nginx/conf:/etc/nginx
      # log
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - php-fpm

  # fpm
  php-fpm:
    container_name: "mdocker-fpm-qa"
    environment:
      - TZ=Asia/Shanghai
    build:
      context: ./php-fpm
      #args:
        #HTTP_PROXY: "http://10.1.5.232:1087"
    expose:
      - "9000"
    volumes:
      # app
      - ./www:/usr/share/nginx/html
      # config
      - ./php-fpm/conf/php.ini:/usr/local/etc/php/php.ini

  php-msf-demo:
    build:
      context: ./php-cli
      #args:
        #HTTP_PROXY: "http://10.1.5.232:1087"
    ports:
      - "8000:8000"
    container_name: "mdocker-php-msf-demo"
    environment:
      MSF_ENV: docker
      TZ: Asia/Shanghai
    volumes:
      # app
      - ./www/php-msf-demo:/usr/share/nginx/html/php-msf-demo
      # config
      - ./php-cli/conf/php.ini:/usr/local/etc/php/php.ini
    command: php /usr/share/nginx/html/php-msf-demo/server.php
    
  # 单机redis
  redis:
    image: redis:3-alpine
    container_name: mdocker-redis
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "6379:6379"
    volumes:
      # data
      - ./redis/data:/data
    command: redis-server --appendonly yes

  #单机mongo 本地开发用
  # mongo:
  #   image: mongo:3.0
  #   container_name: mdocker_mongo
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     # data
  #     - ./mongo/27017/data:/data/db
  #     # log
  #     - ./mongo/27017/mongod.log:/data/mongod.log
  #     # conf
  #     - ./mongo/27017/27017.conf:/data/27017.conf
  #   command: mongod -f /data/27017.conf

  #复制集mongo-node1
  mongo-replica-node1:
    image: mongo:3.0
    container_name: mdocker-mongo-replica-node1
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "28111:28111"
    volumes:
      # data
      - ./mongo/28111/data:/data/db
      # conf
      - ./mongo/28111/28111.conf:/data/28111.conf
    command: mongod -f /data/28111.conf
  
  #复制集mongo-node2
  mongo-replica-node2:
    image: mongo:3.0
    container_name: mdocker-mongo-replica-node2
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "28112:28112"
    volumes:
      # data
      - ./mongo/28112/data:/data/db
      # conf
      - ./mongo/28112/28112.conf:/data/28112.conf
    command: mongod -f /data/28112.conf

  #单机ElasticSearch
  elasticsearch:
    image: elasticsearch
    container_name: mdocker-elasticsearch
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      # data
      - ./elasticsearch/data:/usr/share/elasticsearch/data